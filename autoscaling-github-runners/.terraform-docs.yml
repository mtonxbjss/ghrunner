formatter: "" # this is required

version: ""

recursive:
  enabled: false
  path: modules

sections:
  hide: []
  show: []

content: |-
  ## autoscaling-github-runners Module

  ### Pre-Requisites
  Before deploying this module you must:
  * Have a VPC with at least one subnet. The Subnets can be private or public, but they must have access to the Internet via IGW or NAT
  * Have deployed the `imagebuilder-github-runner-ami` module, so that you can supply the image ARN as an input to this module
  * Have a GitHub project, and have generated a Personal Access Token with these permissions as a minimum: *Read Access to Metadata*, *Read and Write Access to Administration*

  ### Simplest Possible Example
  This is a single GitHub Runner that does not autoscale and does not shut down overnight

  ```terraform
  module "autoscaling_github_runners_simple" {
    source = "git::https://github.com/mtonxbjss/ghrunner.git//autoscaling-github-runners"

    ec2_imagebuilder_image_arn                       = module.imagebuilder_github_runner_ami.imagebuilder_image_arn_xxx
    ec2_subnet_ids                                   = module.vpc.private_subnets
    ec2_vpc_id                                       = module.vpc.vpc_id
    iam_roles_with_admin_access_to_created_resources = [local.identifiers.account_admin_role_arn]
    github_organization_url                          = "https://github.com/bjsscloud"
    github_repository_name                           = "bjss-careers-aws-dev"
    region                                           = var.region
    runner_account_id                                = var.aws_account_id
    state_bucket_name                                = data.terraform_remote_state.bootstrap.outputs.state_bucket_name
    state_bucket_key_arn                             = data.terraform_remote_state.bootstrap.outputs.state_bucket_key
    state_lock_table_arn                             = data.terraform_remote_state.bootstrap.outputs.state_lock_table_arn
    unique_prefix                                    = "${local.prefix}-simple"
  }
  ```

  ### More Complex Example
  This is an auto-scaling group of GitHub Runners using multiple runner tags, spot instances and registering with an ECR Registry on boot

  ```terraform
  module "autoscaling_github_runners_mid" {
    source = "git::https://github.com/mtonxbjss/ghrunner.git//autoscaling-github-runners"

    ec2_autoscaling_maximum_instances = 5
    ec2_dynamic_scaling_enabled       = true
    ec2_github_runner_tag_list        = "techtest,miscellaneous"
    ec2_imagebuilder_image_arn        = module.imagebuilder_github_runner_ami.imagebuilder_image_arn_xxx
    ec2_spot_instances_max_price      = 0.5
    ec2_spot_instances_preferred      = true
    ec2_subnet_ids                    = module.vpc.private_subnets
    ec2_vpc_id                        = module.vpc.vpc_id

    iam_roles_with_admin_access_to_created_resources = [local.identifiers.account_admin_role_arn]

    github_job_image_ecr_account = var.aws_account_id
    github_organization_url      = "https://github.com/bjsscloud"
    github_repository_name       = "bjss-careers-aws-dev"

    region            = var.region
    runner_account_id = var.aws_account_id

    state_bucket_name    = data.terraform_remote_state.bootstrap.outputs.state_bucket_name
    state_bucket_key_arn = data.terraform_remote_state.bootstrap.outputs.state_bucket_key
    state_lock_table_arn = data.terraform_remote_state.bootstrap.outputs.state_lock_table_arn

    unique_prefix     = "${local.prefix}-mid"
  }

  ```


  ### Full Worked Example With All Parameters Expressed
  This is an Auto Scaling Group of GitHub Runners that scales down to a single pilot-light runner overnight
  ```terraform

  module "autoscaling_github_runners" {
    source = "git::https://github.com/mtonxbjss/ghrunner.git//autoscaling-github-runners"

    cicd_artifacts_bucket_name    = aws_s3_bucket.cicd.bucket
    cicd_artifacts_bucket_key_arn = aws_kms_key.cicd.arn

    ec2_autoscaling_desired_instances = 1
    ec2_autoscaling_maximum_instances = 10
    ec2_autoscaling_minimum_instances = 1
    ec2_dynamic_scaling_enabled       = true
    ec2_github_runner_name            = "general"
    ec2_github_runner_tag_list        = "techtest"

    ec2_iam_role_extra_policy_attachments = [
      aws_iam_policy.modify_state.arn,
      aws_iam_policy.deploy_application.arn,
    ]

    ec2_imagebuilder_image_arn          = module.imagebuilder_github_runner_ami.imagebuilder_image_arn_xxx
    ec2_instance_type                   = "t3a.large"
    ec2_maximum_concurrent_github_jobs  = 3
    ec2_nightly_shutdown_enabled        = true
    ec2_nightly_shutdown_scale_in_time  = "0 19 * * *"
    ec2_nightly_shutdown_scale_out_time = "0 8 * * MON-FRI"
    ec2_root_volume_size                = 100
    ec2_runner_role_tag                 = "TechTest GitHub Actions jobs"
    ec2_spot_instances_max_price        = 0.5
    ec2_spot_instances_preferred        = true
    ec2_subnet_ids                      = module.vpc.private_subnets

    ec2_terraform_deployment_roles = [
      local.identifiers.app_deployer_role_arn,
    ]

    ec2_vpc_id = module.vpc.vpc_id

    github_job_image_ecr_account = var.aws_account_id
    github_organization_url      = "https://github.com/bjsscloud"
    github_repository_name       = "bjss-careers-aws-dev"

    iam_roles_with_admin_access_to_created_resources = [
      local.identifiers.app_deployer_role_arn,
      local.identifiers.account_admin_role_arn,
    ]

    permission_boundary_arn = aws_iam_policy.permissions_boundary.arn
    region                  = var.region
    runner_account_id       = var.aws_account_id

    state_bucket_name    = data.terraform_remote_state.bootstrap.outputs.state_bucket_name
    state_bucket_key_arn = data.terraform_remote_state.bootstrap.outputs.state_bucket_key
    state_lock_table_arn = data.terraform_remote_state.bootstrap.outputs.state_lock_table_arn

    unique_prefix           = local.prefix
  }

  ```

  {{ .Inputs }}
  {{ .Outputs }}
  {{ .Providers }}
  {{ .Resources }}

output:
  file: "README.md"
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

output-values:
  enabled: false
  from: ""

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: false
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
